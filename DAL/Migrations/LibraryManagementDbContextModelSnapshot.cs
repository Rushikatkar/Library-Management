// <auto-generated />
using System;
using DAL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(LibraryManagementDbContext))]
    partial class LibraryManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Models.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Biography = "British author, best known for writing the Harry Potter series.",
                            Name = "J.K. Rowling"
                        },
                        new
                        {
                            Id = 2,
                            Biography = "English mathematician, physicist, and astronomer, widely recognized for his laws of motion and gravity.",
                            Name = "Isaac Newton"
                        },
                        new
                        {
                            Id = 3,
                            Biography = "English novelist, essayist, journalist, and critic, famous for works like '1984' and 'Animal Farm'.",
                            Name = "George Orwell"
                        },
                        new
                        {
                            Id = 4,
                            Biography = "Theoretical physicist best known for developing the theory of relativity and the famous equation E=mc^2.",
                            Name = "Albert Einstein"
                        },
                        new
                        {
                            Id = 5,
                            Biography = "Renaissance polymath known for his contributions to art, science, and engineering, including masterpieces like 'Mona Lisa'.",
                            Name = "Leonardo da Vinci"
                        });
                });

            modelBuilder.Entity("DAL.Models.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBorrowed")
                        .HasColumnType("bit");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CategoryId = 1,
                            IsBorrowed = false,
                            Price = 39.990000000000002,
                            PublishedDate = new DateTime(1997, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stock = 10,
                            Title = "Harry Potter and the Philosopher's Stone"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            CategoryId = 2,
                            IsBorrowed = false,
                            Price = 49.990000000000002,
                            PublishedDate = new DateTime(1687, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stock = 5,
                            Title = "Principia Mathematica"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            CategoryId = 1,
                            IsBorrowed = false,
                            Price = 29.989999999999998,
                            PublishedDate = new DateTime(1949, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stock = 7,
                            Title = "1984"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            CategoryId = 2,
                            IsBorrowed = false,
                            Price = 34.990000000000002,
                            PublishedDate = new DateTime(1916, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stock = 3,
                            Title = "Relativity: The Special and General Theory"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 5,
                            CategoryId = 5,
                            IsBorrowed = false,
                            Price = 59.990000000000002,
                            PublishedDate = new DateTime(1952, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stock = 2,
                            Title = "The Notebooks of Leonardo da Vinci"
                        });
                });

            modelBuilder.Entity("DAL.Models.Entities.BorrowingHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BorrowedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("LateFee")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ReturnedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("BorrowingHistories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            BorrowedDate = new DateTime(2024, 12, 1, 8, 3, 41, 742, DateTimeKind.Utc).AddTicks(2065),
                            LateFee = 0.0,
                            ReturnedDate = new DateTime(2024, 12, 9, 8, 3, 41, 742, DateTimeKind.Utc).AddTicks(2070),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            BorrowedDate = new DateTime(2024, 11, 26, 8, 3, 41, 742, DateTimeKind.Utc).AddTicks(2076),
                            LateFee = 0.0,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("DAL.Models.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fiction"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Science"
                        },
                        new
                        {
                            Id = 3,
                            Name = "History"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Technology"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Art"
                        });
                });

            modelBuilder.Entity("DAL.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 12, 11, 8, 3, 41, 742, DateTimeKind.Utc).AddTicks(1612),
                            Email = "rohan@gmail.com",
                            IsActive = true,
                            PasswordHash = "$2a$12$TcF6EKxfOoayF7Q6yNlP/.0KkvV5xGgfAZ3XOU1GG.0XjK1J45o1a",
                            Role = "User",
                            UserName = "Rohan"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 12, 11, 8, 3, 41, 742, DateTimeKind.Utc).AddTicks(1616),
                            Email = "rajkumar@gmail.com",
                            IsActive = true,
                            PasswordHash = "$2b$12$aKsTfYEsr9OzSJi4/SUWCuUNhYGQcD0GDPwaTgJWRaqOgWm9IZubK",
                            Role = "Admin",
                            UserName = "Raj"
                        });
                });

            modelBuilder.Entity("DAL.Models.Entities.Book", b =>
                {
                    b.HasOne("DAL.Models.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Entities.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DAL.Models.Entities.BorrowingHistory", b =>
                {
                    b.HasOne("DAL.Models.Entities.Book", "Book")
                        .WithMany("BorrowingHistories")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Models.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DAL.Models.Entities.Book", b =>
                {
                    b.Navigation("BorrowingHistories");
                });

            modelBuilder.Entity("DAL.Models.Entities.Category", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
